#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;


        location /live/ {
            types {
                application/x-mpegURL m3u8;
            }
        }

        # Screenshot
        location ~* ^/screenshot/.+\.(png)$ {
            root /usr/local/nginx/html/;
        }

        location / {
            server_tokens off;
            proxy_hide_header X-Powered-By;
            proxy_redirect off;
            proxy_pass http://localhost:3000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header X-Real_IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
#            root   html;
#            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

rtmp_auto_push on;
rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        access_log logs/rtmp_access.log;
        ping 30s;
        ping_timeout 10s;

        publish_notify on;

        application live {
            on_publish http://localhost/on_publish;
            on_play http://localhost:3000/on_play;
            on_record_done http://localhost/on_record_done;
            live on;

            hls on;
            hls_type live;
            hls_path /usr/local/nginx/html/live;

            allow publish all;
            allow play all;
            recorder video {
                record all;
                record_append on;
                record_path /usr/local/nginx/html/hls;
                exec_record_done ffmpeg -i $path -vcodec png -vframes 1 -an -f rawvideo -s 360x184 -ss 00:00:01 -y /usr/local/nginx/html/screenshot/$name.png;
            }
            push rtmp://localhost/hls;
        }

        application hls {
            on_record_done http://localhost/screenshot_done;
            hls on;
            hls_path /usr/local/nginx/html/screenshot;
            hls_fragment 1s;
            exec_publish_done rm /usr/local/nginx/html/screenshot/$name.flv;
            recorder preview {
                record keyframes;
                record_max_frames 2;
                record_path /usr/local/nginx/html/screenshot;
                record_interval 1s;
#               exec_record_done ffmpeg -i $path -vcodec png -vframes 1 -an -f rawvideo -s 1366x768 -ss 00:00:00 -y /usr/local/nginx/html/screenshot/$name.png;
                exec_record_done ffmpeg -i /usr/local/nginx/html/hls/$name.flv -vcodec png -vframes 1 -an -f rawvideo -s 360x184 -ss 00:00:00 -y /usr/local/nginx/html/screenshot/$name.png;
            }
        }
    }
}

